name: windows

on: [push, pull_request]

jobs:

  windows-build:
    runs-on: ${{ matrix.windows-version }}
    strategy:
      fail-fast: false
      matrix:
        windows-version:
          - 'windows-2019'
          - 'windows-latest'
        ROSDISTRO: [noetic]
    env:
      CXXFLAGS: /MP
      VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

    steps:
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
          
      - name: Restore cached ROS
        id: cache-ros-restore
        uses: actions/cache/restore@v3
        with:
          path: C:\opt
          key: ${{ matrix.windows-version }}-ros-${{ matrix.ROSDISTRO }}

      - name: Install ROS
        shell: cmd
        if: steps.cache-ros-restore.outputs.cache-hit != 'true'
        run: |
          choco sources add -n=roswin -s https://aka.ms/ros/public --priority 1
          choco install ros-%ROSDISTRO%-desktop_full -y --no-progress
        env:
          ROSDISTRO: ${{ matrix.ROSDISTRO }}
      
      - name: Save ROS
        id: cache-ros-save
        uses: actions/cache/save@v3
        with:
          path: C:\opt
          key: ${{ steps.cache-ros-restore.outputs.cache-primary-key }}

      - name: Remove Qt in ROS
        shell: cmd
        run: |
          cd C:\opt\ros\noetic\x64\bin
          mkdir backup_Qt
          move /Y Qt5*.dll backup_Qt
          cd C:\opt\ros\noetic\x64\include
          mkdir backup_Qt
          for /D %%F in (Qt*) do move /Y "%%F" "backup_Qt\%%~nxF"
          cd C:\opt\ros\noetic\x64\share\cmake
          mkdir backup_Qt
          for /D %%F in (Qt*) do move /Y "%%F" "backup_Qt\%%~nxF"
          exit /B 0

      - name: Test ROS workspace
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat" -arch=amd64 -host_arch=amd64
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat" -arch=amd64 -host_arch=amd64
          call "C:\opt\ros\%ROSDISTRO%\x64\setup.bat"
          mkdir ros_ws
          cd ros_ws
          mkdir src
          catkin_make
        env:
          ROSDISTRO: ${{ matrix.ROSDISTRO }}

      - name: Sync repository
        uses: actions/checkout@v2
        
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1  # not v2!
        with:
          path: '${{ github.workspace }}/qt_installation/'
          key: ${{ runner.os }}-QtCache
          
      - name: Install Qt
        uses: jurplel/install-qt-action@v2.13.0
        with:
          version: '5.15.2'
          arch: 'win64_msvc2019_64'
          dir: '${{ github.workspace }}/qt_installation/'
          cached: ${{ steps.cache-qt.outputs.cache-hit }}

      - name: Config Plotjuggler
        shell: pwsh
        run: >
          cmake -Ax64 -T host=x64 -B build -DCMAKE_TOOLCHAIN_FILE="C:/vcpkg/scripts/buildsystems/vcpkg.cmake" -DCMAKE_INSTALL_PREFIX=install -DCMAKE_BUILD_TYPE=RelWithDebInfo PlotJuggler;
  
      - name: Build Plotjuggler
        shell: pwsh
        run: >
          cmake --build build --config RelWithDebInfo --target install
         
      - uses: actions/upload-artifact@v1
        with:
          name: install-${{ matrix.windows-version }}
          path: install
